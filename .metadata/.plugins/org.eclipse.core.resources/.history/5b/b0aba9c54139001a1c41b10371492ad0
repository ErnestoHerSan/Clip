package com.clip.apiTest;

import static io.restassured.RestAssured.get;
import static io.restassured.RestAssured.given;
import static org.hamcrest.Matchers.equalTo;
import static org.hamcrest.Matchers.notNullValue;

import java.util.logging.Logger;

import org.junit.Assert;
import org.junit.Test;

import io.restassured.RestAssured;
import io.restassured.response.Response;
import io.restassured.specification.RequestSpecification;

public class TestGetList {

	private static final Logger Log = Logger.getLogger("TestGetList");
	
	@Test 
	public void nuevaLlamada() {
		System.out.println("");
		RestAssured.baseURI = "https://clip-automation-practice.free.beeceptor.com/getList";
		 RequestSpecification httpRequest = RestAssured.given();
		 Response response = httpRequest.get("/066/rest/emergencia/llamadasEntrantes/nuevaLlamada");
		 int statusCode = response.getStatusCode();
		 Log.info(statusCode);
		 Assert.assertEquals(200, statusCode);
	}
	
/*	@Test
	public void testGetAvailableBooks() {
		get("https://api.bitso.com/v3/available_books/").then().body("success", equalTo(true));
	}

	@Test
	public void getTickerByBook() {
		given().param("book", "xrp_mxn").get("https://api.bitso.com/v3/ticker").then().statusCode(200);
	}

	@Test
	public void validateGetTickerPrice() {
		given().param("book", "xrp_mxn").get("https://api.bitso.com/v3/ticker").then().statusCode(200).and()
				.body("payload.ask", notNullValue());
	}
*/
}
